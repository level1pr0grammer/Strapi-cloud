steps:
  # Connect to GKE Cluster
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'container'
      - 'clusters'
      - 'get-credentials'
      - 'autopilot-strapi'
      - '--region'
      - 'asia-southeast1'
      - '--project'
      - 'cloud-project-448820'

  # Fetch Secret and save as .env file
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud secrets versions access latest --secret=my-env > .env
        
  # แก้ไขไฟล์ Dockerfile ชั่วคราวเพื่อคัดลอก .env โดยตรง
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        cat > Dockerfile.tmp << 'EOF'
        FROM node:22.12
        WORKDIR /app
        
        # คัดลอกไฟล์ .env ก่อน
        COPY .env .
        
        # คัดลอกไฟล์ package.json และ package-lock.json
        COPY package.json package-lock.json ./
        
        # เซ็ต NODE_ENV เป็น production
        ENV NODE_ENV=production
        
        # ติดตั้ง dependencies
        RUN npm ci --only=production
        
        # ติดตั้ง dependencies เพิ่มเติมที่จำเป็น
        RUN npm install node-cron pg --save
        
        # คัดลอกโค้ดทั้งหมดไปยัง container
        COPY . .
        
        # สร้าง build ของ Strapi
        RUN npm run build
        
        # กำหนดพอร์ตที่ใช้
        EXPOSE 80
        
        # คำสั่งสำหรับรัน Strapi
        CMD ["npm", "start"]
        EOF
        mv Dockerfile.tmp Dockerfile

  # Build Docker Image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/cloud-project-448820/strapi:latest'
      - '.'

  # Push Docker Image to GCR
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'gcr.io/cloud-project-448820/strapi:latest'

  # Delete old Deployment (if fails, continue)
  - name: 'gcr.io/cloud-builders/kubectl'
    args:
      - 'delete'
      - 'deployment'
      - 'strapi-deploy'
      - '-n'
      - 'strapi'
    env:
      - 'CLOUDSDK_COMPUTE_REGION=asia-southeast1'
      - 'CLOUDSDK_CONTAINER_CLUSTER=autopilot-strapi'
    allowFailure: true  # If this step fails, continue to the next step

  # Create new Deployment
  - name: 'gcr.io/cloud-builders/kubectl'
    args:
      - 'apply'
      - '-f'
      - 'deployment.yaml'
    env:
      - 'CLOUDSDK_COMPUTE_REGION=asia-southeast1'
      - 'CLOUDSDK_CONTAINER_CLUSTER=autopilot-strapi'

  # Check Deployment status
  - name: 'gcr.io/cloud-builders/kubectl'
    args:
      - 'rollout'
      - 'status'
      - 'deployment/strapi-deploy'
      - '-n'
      - 'strapi'
    env:
      - 'CLOUDSDK_COMPUTE_REGION=asia-southeast1'
      - 'CLOUDSDK_CONTAINER_CLUSTER=autopilot-strapi'

options:
  logging: "NONE"